{"ast":null,"code":"import _toConsumableArray from\"C:/Users/bryan/Documents/React-Project/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/bryan/Documents/React-Project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,useContext}from'react';import axios from'axios';import\"./index.css\";import openai,{Configuration,OpenAIApi}from\"openai\";import{MainContext}from'../../context/MainContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WidgetDisplay=function WidgetDisplay(){//SECTION - useContext\nvar _useContext=useContext(MainContext),entryText=_useContext.entryText,userTxTBubble=_useContext.userTxTBubble,AiTxtBubble=_useContext.AiTxtBubble,widgetBgColor=_useContext.widgetBgColor,widgetColor=_useContext.widgetColor,xBtnColor=_useContext.xBtnColor,submitBtn=_useContext.submitBtn,headerColor=_useContext.headerColor,pfpLineColor=_useContext.pfpLineColor,footerColor=_useContext.footerColor,VAimg=_useContext.VAimg,imageDimensions=_useContext.imageDimensions;// SECTION - Set up states\nvar _useState=useState({NeutralWidget:'',ChatWidget:'none'}),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),chatArray=_useState6[0],setChatArray=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),convoCounter=_useState8[0],SetConvoCounter=_useState8[1];var handleToggle=function handleToggle(e){if(e.target.className.includes('neutral-widget-icon')){setToggle({NeutralWidget:'none',ChatWidget:''});}else{setToggle({NeutralWidget:'',ChatWidget:'none'});}};var handleInput=function handleInput(e){setInput(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();if(input==\"\")return;setChatArray([].concat(_toConsumableArray(chatArray),[input]));setInput('');SetConvoCounter(convoCounter+1);};var handleScroll=function handleScroll(e){if(e===null)return;e.scrollTop=e.scrollHeight;};// SECTION - Populates the chat \nvar chatDisplay=chatArray.map(function(text,index){if(typeof text!=\"string\"){console.log(text.response);return/*#__PURE__*/_jsx(\"div\",{className:\"VA-Text-Bubble-Div\",style:{backgroundColor:AiTxtBubble||\"lightblue\"},children:/*#__PURE__*/_jsx(\"p\",{className:\"VA-Text-Bubble\",children:text.response})},index);}else{return/*#__PURE__*/_jsx(\"div\",{className:\"User-Text-Bubble-Div\",style:{backgroundColor:userTxTBubble||\"lightblue\"},children:/*#__PURE__*/_jsxs(\"p\",{className:\"User-Text-Bubble\",children:[text,\" \"]})},index);}});//SECTION - ChatGPT API\n// useEffect(()=>{\n//   async function queryChatbot(prompt, userParams = '') {\n//     const url = 'https://api.openai.com/v1/chat/completions';\n//     const headers = {\n//       'Content-Type': 'application/json',\n//       'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`\n//     };\n//     const systemMessage = { role: 'system', content: 'You are a helpful assistant.' };\n//     const userMessage = { role: 'user', content: prompt };\n//     const messages = [systemMessage, userMessage];\n//     if (userParams) {\n//       const paramMessage = { role: 'user', content: userParams };\n//       messages.push(paramMessage);\n//     }\n//     const data = {\n//       model: 'gpt-3.5-turbo',\n//       messages\n//     };\n//     try {\n//       const response = await axios.post(url, data, { headers });\n//       const chatResult = response.data.choices[0].message.content;\n//       return chatResult;\n//     } catch (error) {\n//       console.error('Error:', error.response.data);\n//       return null;\n//     }\n//   }\n//   // Example usage ${input}\n//   const prompt = `${chatArray[chatArray.length - 1]}`;\n//   const userParams = 'Only answer business-related questions. If they are not business related, ONLY say \"sorry, I can only assist in business related things\"';\n//   queryChatbot(prompt, userParams)\n//     .then(response => {\n//       setChatArray([...chatArray, {response}]);\n//       // console.log(response)\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });\n// }, [convoCounter])\nreturn/*#__PURE__*/_jsxs(\"div\",{id:\"chat-widget\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"widget-open-icon\",style:{display:toggle.ChatWidget},children:[/*#__PURE__*/_jsxs(\"div\",{id:\"chat-header\",style:{backgroundColor:headerColor||\"#f2f2f2\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"img-trim\",style:{borderColor:pfpLineColor||\"rgb(201, 197, 197)\"},children:/*#__PURE__*/_jsx(\"img\",{id:\"widget-profile\",src:VAimg||require('./photo.jpg'),style:{height:imageDimensions.height,width:imageDimensions.width}})}),/*#__PURE__*/_jsx(\"h2\",{children:entryText||\"Greetings!\"})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"chat-body\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"chat-messages\",ref:handleScroll,style:{backgroundColor:widgetBgColor||\"white\"},children:chatDisplay}),/*#__PURE__*/_jsxs(\"form\",{id:\"chat-input\",onSubmit:handleSubmit,style:{backgroundColor:footerColor||\"#f2f2f2\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"user-input\",value:input,onChange:handleInput,placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{id:\"send-button\",style:{backgroundColor:submitBtn||\"#4CAF50\"},children:\"Send\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"closing-widget-icon-div\",style:{display:toggle.ChatWidget},onClick:handleToggle,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-light fa-x closing-widget-icon widget-Icon\",style:{backgroundColor:xBtnColor||\"#e93d3d\"}})}),/*#__PURE__*/_jsx(\"div\",{id:\"neutral-widget-icon-div\",style:{display:toggle.NeutralWidget},onClick:handleToggle,children:/*#__PURE__*/_jsx(\"i\",{className:\"far neutral-widget-icon widget-Icon\",style:{backgroundColor:widgetColor||\"white\"},children:\"\\uF086\"})})]});};export default WidgetDisplay;","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","axios","openai","Configuration","OpenAIApi","MainContext","jsx","_jsx","jsxs","_jsxs","WidgetDisplay","_useContext","entryText","userTxTBubble","AiTxtBubble","widgetBgColor","widgetColor","xBtnColor","submitBtn","headerColor","pfpLineColor","footerColor","VAimg","imageDimensions","_useState","NeutralWidget","ChatWidget","_useState2","_slicedToArray","toggle","setToggle","_useState3","_useState4","input","setInput","_useState5","_useState6","chatArray","setChatArray","_useState7","_useState8","convoCounter","SetConvoCounter","handleToggle","e","target","className","includes","handleInput","value","handleSubmit","preventDefault","concat","_toConsumableArray","handleScroll","scrollTop","scrollHeight","chatDisplay","map","text","index","console","log","response","style","backgroundColor","children","id","display","borderColor","src","require","height","width","ref","onSubmit","type","onChange","placeholder","onClick"],"sources":["C:/Users/bryan/Documents/React-Project/src/components/WidgetDisplay/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios';\r\nimport \"./index.css\"\r\nimport openai, {Configuration, OpenAIApi} from \"openai\"\r\nimport { MainContext } from '../../context/MainContext';\r\n\r\nconst WidgetDisplay = () => {\r\n  //SECTION - useContext\r\n  const {\r\n    entryText,\r\n    userTxTBubble,\r\n    AiTxtBubble,\r\n    widgetBgColor,\r\n    widgetColor,\r\n    xBtnColor,\r\n    submitBtn,\r\n    headerColor,\r\n    pfpLineColor,\r\n    footerColor,\r\n    VAimg,\r\n    imageDimensions\r\n  } = useContext(MainContext)\r\n\r\n  // SECTION - Set up states\r\n  const [toggle, setToggle] = useState({\r\n    NeutralWidget: '',\r\n    ChatWidget: 'none',\r\n  });\r\n  const [input, setInput] = useState('');\r\n  const [chatArray, setChatArray] = useState([]);\r\n  const [convoCounter, SetConvoCounter] = useState(1)\r\n\r\n  const handleToggle = (e) => {\r\n    if (e.target.className.includes('neutral-widget-icon')) {\r\n      setToggle({\r\n        NeutralWidget: 'none',\r\n        ChatWidget: '',\r\n      });\r\n    } else {\r\n      setToggle({\r\n        NeutralWidget: '',\r\n        ChatWidget: 'none',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(input == \"\") return\r\n    setChatArray([...chatArray, input]);\r\n    setInput('');\r\n    SetConvoCounter(convoCounter + 1)\r\n  };\r\n  const handleScroll = (e) =>{\r\n    if(e === null) return\r\n    e.scrollTop = e.scrollHeight\r\n  }\r\n  // SECTION - Populates the chat \r\n  const chatDisplay = chatArray.map((text, index) =>{\r\n    if(typeof text != \"string\"){\r\n      console.log(text.response)\r\n      return(\r\n        <div className='VA-Text-Bubble-Div' key={index} style={{backgroundColor:AiTxtBubble || \"lightblue\"}}>\r\n          <p className='VA-Text-Bubble'>{text.response}</p>\r\n        </div>\r\n      )\r\n    }else{\r\n      return (\r\n      <div className=\"User-Text-Bubble-Div\" key={index} style={{backgroundColor:userTxTBubble || \"lightblue\"}}>\r\n        <p className=\"User-Text-Bubble\">{text} </p>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  );\r\n\r\n  //SECTION - ChatGPT API\r\n  // useEffect(()=>{\r\n  //   async function queryChatbot(prompt, userParams = '') {\r\n  //     const url = 'https://api.openai.com/v1/chat/completions';\r\n  //     const headers = {\r\n  //       'Content-Type': 'application/json',\r\n  //       'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`\r\n  //     };\r\n    \r\n  //     const systemMessage = { role: 'system', content: 'You are a helpful assistant.' };\r\n  //     const userMessage = { role: 'user', content: prompt };\r\n  //     const messages = [systemMessage, userMessage];\r\n    \r\n  //     if (userParams) {\r\n  //       const paramMessage = { role: 'user', content: userParams };\r\n  //       messages.push(paramMessage);\r\n  //     }\r\n    \r\n  //     const data = {\r\n  //       model: 'gpt-3.5-turbo',\r\n  //       messages\r\n  //     };\r\n    \r\n  //     try {\r\n  //       const response = await axios.post(url, data, { headers });\r\n  //       const chatResult = response.data.choices[0].message.content;\r\n  //       return chatResult;\r\n  //     } catch (error) {\r\n  //       console.error('Error:', error.response.data);\r\n  //       return null;\r\n  //     }\r\n  //   }\r\n    \r\n  //   // Example usage ${input}\r\n  //   const prompt = `${chatArray[chatArray.length - 1]}`;\r\n  //   const userParams = 'Only answer business-related questions. If they are not business related, ONLY say \"sorry, I can only assist in business related things\"';\r\n    \r\n  //   queryChatbot(prompt, userParams)\r\n  //     .then(response => {\r\n  //       setChatArray([...chatArray, {response}]);\r\n  //       // console.log(response)\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.error('Error:', error);\r\n  //     });\r\n  // }, [convoCounter])\r\n\r\n  return (\r\n    <div id=\"chat-widget\">\r\n      {/*SECTION - Below This is the chat */}\r\n      <div id=\"widget-open-icon\" style={{ display: toggle.ChatWidget }}>\r\n        <div id=\"chat-header\" style={{backgroundColor: headerColor || \"#f2f2f2\"}}>\r\n          <div className=\"img-trim\" style={{borderColor:pfpLineColor|| \"rgb(201, 197, 197)\"}}>\r\n            {<img id=\"widget-profile\" src={VAimg || require('./photo.jpg')} style={{height: imageDimensions.height, width: imageDimensions.width}}/>}\r\n          </div>\r\n          <h2>{entryText || \"Greetings!\"}</h2>\r\n          {/*NOTE - This is the entry comment */} \r\n        </div>\r\n        <div id=\"chat-body\">\r\n          <div id=\"chat-messages\" ref={handleScroll} style={{backgroundColor:widgetBgColor || \"white\"}}>\r\n            {chatDisplay}\r\n          </div>\r\n          <form id=\"chat-input\" onSubmit={handleSubmit} style={{backgroundColor: footerColor||\"#f2f2f2\"}}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"user-input\"\r\n              value={input}\r\n              onChange={handleInput}\r\n              placeholder=\"Type your message...\"\r\n            />\r\n            <button id=\"send-button\" style={{backgroundColor:submitBtn || \"#4CAF50\"}}>\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/*SECTION - Below is the Wiget bubble icons for close and open */}\r\n      <div id=\"closing-widget-icon-div\" style={{ display: toggle.ChatWidget }} onClick={handleToggle}>\r\n        <i className=\"fa-light fa-x closing-widget-icon widget-Icon\" style={{backgroundColor:xBtnColor || \"#e93d3d\"}}></i>\r\n      </div>\r\n      <div id=\"neutral-widget-icon-div\" style={{ display: toggle.NeutralWidget}} onClick={handleToggle}>\r\n        <i className=\"far neutral-widget-icon widget-Icon\" style={{backgroundColor:widgetColor || \"white\"}}>&#xf086;</i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WidgetDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}