{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\Documents\\\\React-Project\\\\src\\\\components\\\\WidgetDisplay\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport \"./index.css\";\nimport openai, { Configuration, OpenAIApi } from \"openai\";\nimport { MainContext } from '../../context/MainContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WidgetDisplay = () => {\n  _s();\n  //SECTION - useContext\n  const {\n    entryText,\n    userTxTBubble,\n    AiTxtBubble,\n    widgetBgColor,\n    widgetColor,\n    xBtnColor,\n    submitBtn,\n    headerColor,\n    pfpLineColor,\n    footerColor,\n    VAimg,\n    imageDimensions\n  } = useContext(MainContext);\n\n  // SECTION - Set up states\n  const [toggle, setToggle] = useState({\n    NeutralWidget: '',\n    ChatWidget: 'none'\n  });\n  const [input, setInput] = useState('');\n  const [chatArray, setChatArray] = useState([]);\n  const [convoCounter, SetConvoCounter] = useState(1);\n  const handleToggle = e => {\n    if (e.target.className.includes('neutral-widget-icon')) {\n      setToggle({\n        NeutralWidget: 'none',\n        ChatWidget: ''\n      });\n    } else {\n      setToggle({\n        NeutralWidget: '',\n        ChatWidget: 'none'\n      });\n    }\n  };\n  const handleInput = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input == \"\") return;\n    setChatArray([...chatArray, input]);\n    setInput('');\n    SetConvoCounter(convoCounter + 1);\n  };\n  const handleScroll = e => {\n    if (e === null) return;\n    e.scrollTop = e.scrollHeight;\n  };\n  // SECTION - Populates the chat \n  const chatDisplay = chatArray.map((text, index) => {\n    if (typeof text != \"string\") {\n      console.log(text.response);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"VA-Text-Bubble-Div\",\n        style: {\n          backgroundColor: AiTxtBubble || \"lightblue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"VA-Text-Bubble\",\n          children: text.response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User-Text-Bubble-Div\",\n        style: {\n          backgroundColor: userTxTBubble || \"lightblue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"User-Text-Bubble\",\n          children: [text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this);\n    }\n  });\n\n  //SECTION - ChatGPT API\n  // useEffect(()=>{\n  //   async function queryChatbot(prompt, userParams = '') {\n  //     const url = 'https://api.openai.com/v1/chat/completions';\n  //     const headers = {\n  //       'Content-Type': 'application/json',\n  //       'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`\n  //     };\n\n  //     const systemMessage = { role: 'system', content: 'You are a helpful assistant.' };\n  //     const userMessage = { role: 'user', content: prompt };\n  //     const messages = [systemMessage, userMessage];\n\n  //     if (userParams) {\n  //       const paramMessage = { role: 'user', content: userParams };\n  //       messages.push(paramMessage);\n  //     }\n\n  //     const data = {\n  //       model: 'gpt-3.5-turbo',\n  //       messages\n  //     };\n\n  //     try {\n  //       const response = await axios.post(url, data, { headers });\n  //       const chatResult = response.data.choices[0].message.content;\n  //       return chatResult;\n  //     } catch (error) {\n  //       console.error('Error:', error.response.data);\n  //       return null;\n  //     }\n  //   }\n\n  //   // Example usage ${input}\n  //   const prompt = `${chatArray[chatArray.length - 1]}`;\n  //   const userParams = 'Only answer business-related questions. If they are not business related, ONLY say \"sorry, I can only assist in business related things\"';\n\n  //   queryChatbot(prompt, userParams)\n  //     .then(response => {\n  //       setChatArray([...chatArray, {response}]);\n  //       // console.log(response)\n  //     })\n  //     .catch(error => {\n  //       console.error('Error:', error);\n  //     });\n  // }, [convoCounter])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"widget-open-icon\",\n      style: {\n        display: toggle.ChatWidget\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-header\",\n        style: {\n          backgroundColor: headerColor || \"#f2f2f2\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-trim\",\n          style: {\n            borderColor: pfpLineColor || \"rgb(201, 197, 197)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"widget-profile\",\n            src: VAimg || require('./photo.jpg'),\n            style: {\n              height: imageDimensions.height,\n              width: imageDimensions.width\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: entryText || \"Greetings!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"chat-messages\",\n          ref: handleScroll,\n          style: {\n            backgroundColor: widgetBgColor || \"white\"\n          },\n          children: chatDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"chat-input\",\n          onSubmit: handleSubmit,\n          style: {\n            backgroundColor: footerColor || \"#f2f2f2\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"user-input\",\n            value: input,\n            onChange: handleInput,\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"send-button\",\n            style: {\n              backgroundColor: submitBtn || \"#4CAF50\"\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"closing-widget-icon-div\",\n      style: {\n        display: toggle.ChatWidget\n      },\n      onClick: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-light fa-x closing-widget-icon widget-Icon\",\n        style: {\n          backgroundColor: xBtnColor || \"#e93d3d\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"neutral-widget-icon-div\",\n      style: {\n        display: toggle.NeutralWidget\n      },\n      onClick: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far neutral-widget-icon widget-Icon\",\n        style: {\n          backgroundColor: widgetColor || \"white\"\n        },\n        children: \"\\uF086\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(WidgetDisplay, \"beRaaCntj+OYDGpqsOP8f2httQ0=\");\n_c = WidgetDisplay;\nexport default WidgetDisplay;\nvar _c;\n$RefreshReg$(_c, \"WidgetDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","axios","openai","Configuration","OpenAIApi","MainContext","jsxDEV","_jsxDEV","WidgetDisplay","_s","entryText","userTxTBubble","AiTxtBubble","widgetBgColor","widgetColor","xBtnColor","submitBtn","headerColor","pfpLineColor","footerColor","VAimg","imageDimensions","toggle","setToggle","NeutralWidget","ChatWidget","input","setInput","chatArray","setChatArray","convoCounter","SetConvoCounter","handleToggle","e","target","className","includes","handleInput","value","handleSubmit","preventDefault","handleScroll","scrollTop","scrollHeight","chatDisplay","map","text","index","console","log","response","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","id","display","borderColor","src","require","height","width","ref","onSubmit","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bryan/Documents/React-Project/src/components/WidgetDisplay/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport axios from 'axios';\r\nimport \"./index.css\"\r\nimport openai, {Configuration, OpenAIApi} from \"openai\"\r\nimport { MainContext } from '../../context/MainContext';\r\n\r\nconst WidgetDisplay = () => {\r\n  //SECTION - useContext\r\n  const {\r\n    entryText,\r\n    userTxTBubble,\r\n    AiTxtBubble,\r\n    widgetBgColor,\r\n    widgetColor,\r\n    xBtnColor,\r\n    submitBtn,\r\n    headerColor,\r\n    pfpLineColor,\r\n    footerColor,\r\n    VAimg,\r\n    imageDimensions\r\n  } = useContext(MainContext)\r\n\r\n  // SECTION - Set up states\r\n  const [toggle, setToggle] = useState({\r\n    NeutralWidget: '',\r\n    ChatWidget: 'none',\r\n  });\r\n  const [input, setInput] = useState('');\r\n  const [chatArray, setChatArray] = useState([]);\r\n  const [convoCounter, SetConvoCounter] = useState(1)\r\n\r\n  const handleToggle = (e) => {\r\n    if (e.target.className.includes('neutral-widget-icon')) {\r\n      setToggle({\r\n        NeutralWidget: 'none',\r\n        ChatWidget: '',\r\n      });\r\n    } else {\r\n      setToggle({\r\n        NeutralWidget: '',\r\n        ChatWidget: 'none',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(input == \"\") return\r\n    setChatArray([...chatArray, input]);\r\n    setInput('');\r\n    SetConvoCounter(convoCounter + 1)\r\n  };\r\n  const handleScroll = (e) =>{\r\n    if(e === null) return\r\n    e.scrollTop = e.scrollHeight\r\n  }\r\n  // SECTION - Populates the chat \r\n  const chatDisplay = chatArray.map((text, index) =>{\r\n    if(typeof text != \"string\"){\r\n      console.log(text.response)\r\n      return(\r\n        <div className='VA-Text-Bubble-Div' key={index} style={{backgroundColor:AiTxtBubble || \"lightblue\"}}>\r\n          <p className='VA-Text-Bubble'>{text.response}</p>\r\n        </div>\r\n      )\r\n    }else{\r\n      return (\r\n      <div className=\"User-Text-Bubble-Div\" key={index} style={{backgroundColor:userTxTBubble || \"lightblue\"}}>\r\n        <p className=\"User-Text-Bubble\">{text} </p>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n  );\r\n\r\n  //SECTION - ChatGPT API\r\n  // useEffect(()=>{\r\n  //   async function queryChatbot(prompt, userParams = '') {\r\n  //     const url = 'https://api.openai.com/v1/chat/completions';\r\n  //     const headers = {\r\n  //       'Content-Type': 'application/json',\r\n  //       'Authorization': `Bearer ${process.env.REACT_APP_API_KEY}`\r\n  //     };\r\n    \r\n  //     const systemMessage = { role: 'system', content: 'You are a helpful assistant.' };\r\n  //     const userMessage = { role: 'user', content: prompt };\r\n  //     const messages = [systemMessage, userMessage];\r\n    \r\n  //     if (userParams) {\r\n  //       const paramMessage = { role: 'user', content: userParams };\r\n  //       messages.push(paramMessage);\r\n  //     }\r\n    \r\n  //     const data = {\r\n  //       model: 'gpt-3.5-turbo',\r\n  //       messages\r\n  //     };\r\n    \r\n  //     try {\r\n  //       const response = await axios.post(url, data, { headers });\r\n  //       const chatResult = response.data.choices[0].message.content;\r\n  //       return chatResult;\r\n  //     } catch (error) {\r\n  //       console.error('Error:', error.response.data);\r\n  //       return null;\r\n  //     }\r\n  //   }\r\n    \r\n  //   // Example usage ${input}\r\n  //   const prompt = `${chatArray[chatArray.length - 1]}`;\r\n  //   const userParams = 'Only answer business-related questions. If they are not business related, ONLY say \"sorry, I can only assist in business related things\"';\r\n    \r\n  //   queryChatbot(prompt, userParams)\r\n  //     .then(response => {\r\n  //       setChatArray([...chatArray, {response}]);\r\n  //       // console.log(response)\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.error('Error:', error);\r\n  //     });\r\n  // }, [convoCounter])\r\n\r\n  return (\r\n    <div id=\"chat-widget\">\r\n      {/*SECTION - Below This is the chat */}\r\n      <div id=\"widget-open-icon\" style={{ display: toggle.ChatWidget }}>\r\n        <div id=\"chat-header\" style={{backgroundColor: headerColor || \"#f2f2f2\"}}>\r\n          <div className=\"img-trim\" style={{borderColor:pfpLineColor|| \"rgb(201, 197, 197)\"}}>\r\n            {<img id=\"widget-profile\" src={VAimg || require('./photo.jpg')} style={{height: imageDimensions.height, width: imageDimensions.width}}/>}\r\n          </div>\r\n          <h2>{entryText || \"Greetings!\"}</h2>\r\n          {/*NOTE - This is the entry comment */} \r\n        </div>\r\n        <div id=\"chat-body\">\r\n          <div id=\"chat-messages\" ref={handleScroll} style={{backgroundColor:widgetBgColor || \"white\"}}>\r\n            {chatDisplay}\r\n          </div>\r\n          <form id=\"chat-input\" onSubmit={handleSubmit} style={{backgroundColor: footerColor||\"#f2f2f2\"}}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"user-input\"\r\n              value={input}\r\n              onChange={handleInput}\r\n              placeholder=\"Type your message...\"\r\n            />\r\n            <button id=\"send-button\" style={{backgroundColor:submitBtn || \"#4CAF50\"}}>\r\n              Send\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {/*SECTION - Below is the Wiget bubble icons for close and open */}\r\n      <div id=\"closing-widget-icon-div\" style={{ display: toggle.ChatWidget }} onClick={handleToggle}>\r\n        <i className=\"fa-light fa-x closing-widget-icon widget-Icon\" style={{backgroundColor:xBtnColor || \"#e93d3d\"}}></i>\r\n      </div>\r\n      <div id=\"neutral-widget-icon-div\" style={{ display: toggle.NeutralWidget}} onClick={handleToggle}>\r\n        <i className=\"far neutral-widget-icon widget-Icon\" style={{backgroundColor:widgetColor || \"white\"}}>&#xf086;</i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default WidgetDisplay"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}